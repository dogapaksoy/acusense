{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\acusense\\\\src\\\\components\\\\FileUpload.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileDownload = () => {\n  const handleFileDownload = async () => {\n    try {\n      const response = await axios.get('YOUR_API_DOWNLOAD_ENDPOINT', {\n        responseType: 'blob' // İndirilen dosya için blob kullanıyoruz\n      });\n\n      // Dosyayı kullanıcıya indirtmek için\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'filename.ext'); // Dosya adını belirleyin\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (error) {\n      console.error(\"Dosya indirilirken bir hata oluştu: \", error);\n      alert(\"Dosya indirilemedi!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFileDownload,\n      children: \"Dosyay\\u0131 \\u0130ndir\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = FileDownload;\nexport default FileDownload;\nvar _c;\n$RefreshReg$(_c, \"FileDownload\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","FileDownload","handleFileDownload","response","get","responseType","url","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","error","console","alert","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/react/acusense/src/components/FileUpload.jsx"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst FileDownload = () => {\r\n  const handleFileDownload = async () => {\r\n    try {\r\n      const response = await axios.get('YOUR_API_DOWNLOAD_ENDPOINT', {\r\n        responseType: 'blob' // İndirilen dosya için blob kullanıyoruz\r\n      });\r\n\r\n      // Dosyayı kullanıcıya indirtmek için\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', 'filename.ext'); // Dosya adını belirleyin\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } catch (error) {\r\n      console.error(\"Dosya indirilirken bir hata oluştu: \", error);\r\n      alert(\"Dosya indirilemedi!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleFileDownload}>Dosyayı İndir</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileDownload;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,4BAA4B,EAAE;QAC7DC,YAAY,EAAE,MAAM,CAAC;MACvB,CAAC,CAAC;;MAEF;MACA,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC;MACjE,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGT,GAAG;MACfM,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC,CAAC;MAC/CH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;MAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;MACZN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,IAAI,CAAC;IACjC,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5DE,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,oBACEvB,OAAA;IAAAwB,QAAA,eACExB,OAAA;MAAQyB,OAAO,EAAEvB,kBAAmB;MAAAsB,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV,CAAC;AAACC,EAAA,GA1BI7B,YAAY;AA4BlB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}